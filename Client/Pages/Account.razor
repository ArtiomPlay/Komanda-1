@page "/account"
@inject Projektas.Client.Services.AccountServices AccountServices
@using Projektas.Shared;

<PageTitle>Account</PageTitle>

<div class="row">
	<div class="px-3 login col">
		<div class="type">
			Log In
		</div>
		<label class="textbox" for="accNickname">
			Nickname: <input type="text" name="accNickname" @bind="@accountNickname" />
		</label>
		<label class="textbox" for="accPassword">
			Password: <input type="text" name="accPassword" @bind="@accountPassword" />
		</label>
		<button class="submit" @onclick="LogInEvent">Submit</button>
	</div>
	<div class="px-3 singup col">
		<div class="type">
			Sign Up
		</div>
		<label class="textbox" for="accName">
			Name: <input type="text" name="accName" @bind="@newAccountName" />
		</label>
		<label class="textbox" for="accSurname">
			Surname: <input type="text" name="accSurname" @bind="@newAccountSurname" />
		</label>
		<label class="textbox" for="accNickname">
			Nickname: <input type="text" name="accNickname" @bind="@newAccountNickname" @oninput="NicknameChange" />
		</label>
		<label class="textbox" for="accPassword">
			Password: <input type="text" name="accPassword" @bind="@newAccountPassword" />
		</label>
		<button class="submit" @onclick="SignUpEvent">Submit</button>
		@if(isNicknameNew==false) {
			<div class="new-account-warning">
				This nickname is in use
			</div>
		}
		@if(isFieldsFilled==false) {
			<div class="new-account-warning">
				Not all fields are filled!
			</div>
		}
	</div>
</div>

@code {
	private string? accountNickname = null;
	private string? accountPassword = null;
	private string? newAccountName = null;
	private string? newAccountSurname = null;
	private string? newAccountNickname = null;
	private string? newAccountPassword = null;

	private bool isNicknameNew = true;
	private bool isFieldsFilled = true;

	private void LogInEvent() {
	}

	private async void SignUpEvent() {
		if(newAccountName==null || newAccountSurname==null || newAccountNickname==null ||newAccountPassword==null) {
			isFieldsFilled = false;
		} else if(isNicknameNew) {
			AccountInfo newAccount = new AccountInfo();

			isFieldsFilled = true;

			newAccount.Name=newAccountName;
			newAccount.Surname=newAccountSurname;
			newAccount.Nickname=newAccountNickname;
			newAccount.Password=newAccountPassword;

			await AccountServices.CreateAccount(newAccount);
		}
		StateHasChanged();
	}

	private async void NicknameChange(ChangeEventArgs changeEvent) {
		List<string> nicknames = await AccountServices.GetNicknames();

		newAccountNickname =(string) changeEvent.Value;

		isNicknameNew = true;

		foreach(string nickname in nicknames) {
			if(nickname==newAccountNickname) {
				isNicknameNew=false;
				if(isFieldsFilled==false) {
					isFieldsFilled = true;
				}
			}
		}

		StateHasChanged();
	}
}