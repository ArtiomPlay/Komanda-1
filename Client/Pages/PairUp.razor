@page "/pairup"
@using Projektas.Shared.Enums

<PageTitle>Pair Up</PageTitle>

<div class="game_window">
    @if(gameScreen=="main") {
        <div class="game_title">Pair Up</div>
        <hr class="line">
        <div class="place_row game_info">
            @if(username!=null) {
                <div class="highscore">
                    Highscore
                    <hr class="line">
                    <div class="player_highscore">
                        @if(highscore!=null) {
                            <b>@FormatTime(highscore.GameData.TimeInSeconds) @highscore.GameData.Fails F @highscore.GameData.Difficulty</b>
                        } else {
                            <div class="loader"></div>
                        }
                    </div>
                </div>
            } else {
                <div class="no_highscore"></div>
            }
            <div class="place_col middle">
                <button class="button" @onclick="StartGame">Start</button>
                @if(Difficulty==GameDifficulty.Easy) {
                    <button class="button" @onclick='() => ChangeDifficulty("Normal")'>Difficulty: Easy</button>
                } else if(Difficulty==GameDifficulty.Normal) {
                    <button class="button" @onclick='() => ChangeDifficulty("Hard")'>Difficulty: Normal</button>
                } else if(Difficulty==GameDifficulty.Hard) {
                    <button class="button" @onclick='() => ChangeDifficulty("Easy")'>Difficulty: Hard</button>
                }
            </div>
            <div class="leaderboard">
                Leaderboard
                <hr class="line">
                <div class="leaderboard_info">
                    @if(topScores!=null) {
                        for(int i = 0;i<topScores.Count;i++) {
                            <p>@(i+1). @topScores[i].Username @FormatTime(topScores[i].GameData.TimeInSeconds) @topScores[i].GameData.Fails F @topScores[i].GameData.Difficulty</p>
                        }
                    } else {
                        <div class="loader"></div>
                    }
                </div>
            </div>
        </div>
    } else if(gameScreen=="started") {
        <div class="place_col">
            <div class="place_row">
                <div class="game_score">
                    Mistakes: @mistakes
                </div>
                <div class="game_timer">
                    Time: @FormatTime(ElapsedTime)
                </div>
            </div>
            <div class="cards_area" style="@gridStyle">
                @foreach(var card in cards) {
                    <button @onclick="() => OnCardSelectedAsync(card)"
                            disabled="@(card.IsMatched || gameScreen!="started")"
                            class="card">
                        @if(card.IsSelected || card.IsMatched) {
                            @if(changeIcon) {
                                <span class="card_value">@cardIcons[(int)card.Value-1]</span>
                            } else {
                                <span class="card_value">@card.Value</span>
                            }


                        } else {
                            <span class="card_value"></span>
                        }
                    </button>
                }
            </div>
        </div>
    } else if(gameScreen=="ended") {
        <div class="game_title">Game Ended</div>
        <hr class="line">
        <div class="place_row game_info">
            @if(username!=null) {
                <div class="highscore">
                    Highscore
                    <hr class="line">
                    <div class="player_highscore">
                        @if(highscore!=null) {
                            <b>@FormatTime(highscore.GameData.TimeInSeconds) @highscore.GameData.Fails F @highscore.GameData.Difficulty</b>
                        } else {
                            <div class="loader"></div>
                        }
                    </div>
                </div>
            } else {
                <div class="no_highscore"></div>
            }
            <div class="place_col middle end">
                <div class="game_score end">
                    Your Score
                    <hr class="line">
                    @FormatTime(ElapsedTime) @mistakes F
                </div>
                <button class="button" @onclick="StartGame">Restart</button>
                @if(Difficulty==GameDifficulty.Easy) {
                    <button class="button" @onclick='() => ChangeDifficulty("Normal")'>Difficulty: Easy</button>
                } else if(Difficulty==GameDifficulty.Normal) {
                    <button class="button" @onclick='() => ChangeDifficulty("Hard")'>Difficulty: Normal</button>
                } else if(Difficulty==GameDifficulty.Hard) {
                    <button class="button" @onclick='() => ChangeDifficulty("Easy")'>Difficulty: Hard</button>
                }
                <button class="button" @onclick='() => ChangeScreen("main")'>Main Menu</button>
            </div>
            <div class="leaderboard">
                Leaderboard
                <hr class="line">
                <div class="leaderboard_info">
                    @if(topScores!=null) {
                        for(int i = 0;i<topScores.Count;i++) {
                            <p>@(i+1). @topScores[i].Username @FormatTime(topScores[i].GameData.TimeInSeconds) @topScores[i].GameData.Fails F @topScores[i].GameData.Difficulty</p>
                        }
                    } else {
                        <div class="loader"></div>
                    }
                </div>
            </div>
        </div>
    }
</div>