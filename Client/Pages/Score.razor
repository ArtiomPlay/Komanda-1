@page "/score"
@using Projektas.Client.Components;
@using Projektas.Shared.Extensions;

<PageTitle>Score</PageTitle>

@if(username!=null) {
    @if(MathGameScores==null) {
        <div class="loader"></div>
    } else {
        <div class="place_row game_score @(IsActive ? "active" : "")">
            @if(MathGameScores.Count==0) {
                <div class="no_scores">No scores available.</div>
            } else {
                <div class="text_section @(IsActive ? "column_layout" : "row_layout")">
                    <span class="score_words" style="--order: 0;">Matches Played: @MathGameMatchesPlayes</span>
                    <span class="score_words" style="--order: 1;">High Score: @MathGameHighscore.Scores points</span>
                    <span class="score_words" style="--order: 2;">Average Score: @MathGameAllTimeAverage.Scores points</span>
                </div>
                <div class="game_info">
                    <button class="toggle_game_info" @onclick="ToggleGameInfo">☰</button>
                </div>
            }
        </div>
    }
} else {
    <div class="no_account">Create an account to track your scores!</div>
}

<!--@if (username != null)
{
    <ul class="nav nav-tabs">
        <li class="nav-item tabs">
            <a class="nav-link @(activeTab == "MathGame" ? "active" : "")" @onclick='() => SetActiveTab("MathGame")'>Math Game</a>
        </li>
        <li class="nav-item tabs">
            <a class="nav-link @(activeTab == "AimTrainer" ? "active" : "")" @onclick='() => SetActiveTab("AimTrainer")'>Aim Trainer</a>
        </li>
        <li class="nav-item tabs">
            <a class="nav-link @(activeTab == "PairUp" ? "active" : "")" @onclick='() => SetActiveTab("PairUp")'>Pair Up</a>
        </li>
        <li class="nav-item tabs">
            <a class="nav-link @(activeTab == "Sudoku" ? "active" : "")" @onclick='() => SetActiveTab("Sudoku")'>Sudoku</a>
        </li>
    </ul>

    <div class="tab-content">
        @if (activeTab == "MathGame" && username != null)
        {
            <div class="tab-pane fade show active">
                @if (MathGameScores == null)
                {
                    <h5 class="text-center">Loading...</h5>
                }
                else if (MathGameScores.Count == 0)
                {
                    <h5 class="text-center">No scores available.</h5>
                }
                else
                {
                    <table class="table table-striped statsTable">
                        <thead>
                            <tr>
                                <th colspan="2" class="text-center">Statistics</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td><strong>Matches Played:</strong></td>
                                <td>@MathGameMatchesPlayes</td>
                            </tr>
                            <tr>
                                <td><strong>High Score:</strong></td>
                                <td>@MathGameHighscore.Scores points</td>
                            </tr>
                            <tr>
                                <td><strong>Average Score:</strong></td>
                                <td>@MathGameAllTimeAverage.Scores points</td>
                            </tr>
                        </tbody>
                    </table>
                    <h4 class="text-center">Last 10 games:</h4>
                    <table class="table table-striped last10GamesTable">
                        <thead>
                            <tr>
                                <th>Date</th>
                                <th>Score</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var score in MathGameScores)
                            {
                                <tr>
                                    <td>@score.ShowOtherDateTimeFormat()</td>
                                    <td>@score.GameData.Scores points</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <h4 class ="text-center">Average Scores for the Last 7 Days:</h4>
                    <ScoreChart ChartId="mathGameChart" Labels="@(MathGameAverageScoreLast7Days.Select(s => s.Date.ToString("dd/MM/yyyy")).ToArray())" Datasets="MathGameAverageScoreLast7DaysDataset" />
                    
                }
            </div>
        }
        else if (activeTab == "AimTrainer" && username != null)
        {
            <div class="tab-pane fade show active">
                @if (AimTrainerScores == null)
                {
                    <h5 class="text-center">Loading...</h5>
                }
                else if (AimTrainerScores.Count == 0)
                {
                    <h5 class="text-center">No scores available.</h5>
                }
                else
                {
                    <table class="table table-striped statsTable">
                        <thead>
                            <tr>
                                <th>Statistics</th>
                                <th>Normal Mode</th>
                                <th>Hard Mode</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td><strong>Matches Played:</strong></td>
                                <td>@AimTrainerMatchesPlayedNormalMode</td>
                                <td>@AimTrainerMatchesPlayedHardMode</td>
                            </tr>
                            <tr>
                                <td><strong>High Score:</strong></td>
                                <td>@AimTrainerHighscoreNormalMode.Scores points</td>
                                <td>@AimTrainerHighscoreHardMode.Scores points</td>
                            </tr>
                            <tr>
                                <td><strong>Average Score:</strong></td>
                                <td>@AimTrainerAllTimeAverageNormalMode.Scores points</td>
                                <td>@AimTrainerAllTimeAverageHardMode.Scores points</td>
                            </tr>
                        </tbody>
                    </table>
                    <h4 class="text-center">Last 10 games:</h4>
                    <table class="table table-striped last10GamesTable">
                        <thead>
                            <tr>
                                <th>Date</th>
                                <th>Score</th>
                                <th>Difficulty</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var score in AimTrainerScores)
                            {
                                <tr>
                                    <td>@score.ShowOtherDateTimeFormat()</td>
                                    <td>@score.GameData.Scores points</td>
                                    <td>@score.GameData.Difficulty</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <h4 class="text-center">Average Scores for the Last 7 Days:</h4>
                    <ScoreChart ChartId="aimTrainerChart" Labels="@(AimTrainerAverageScoreLast7DaysNormalMode.Select(s => s.Date.ToString("dd/MM/yyyy")).ToArray())" Datasets="AimTrainerAverageScoreLast7DaysDataset" />
                }
            </div>
        }
        else if (activeTab == "PairUp" && username != null)
        {
            <div class="tab-pane fade show active">
                @if (PairUpScores == null)
                {
                    <h5 class="text-center">Loading...</h5>
                }
                else if (PairUpScores.Count == 0)
                {
                    <h5 class="text-center">No scores available.</h5>
                }
                else
                {
                    <table class="table table-striped statsTable">
                        <thead>
                            <tr>
                                <th>Statistics</th>
                                <th>Easy difficulty</th>
                                <th>Medium difficulty</th>
                                <th>Hard difficulty</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td><strong>Matches Played:</strong></td>
                                <td>@PairUpMatchesPlayedEasyMode</td>
                                <td>@PairUpMatchesPlayedMediumMode</td>
                                <td>@PairUpMatchesPlayedHardMode</td>
                            </tr>
                            <tr>
                                <td><strong>High Score:</strong></td>
                                <td>@PairUpHighscoreEasyMode.Scores mistakes</td>
                                <td>@PairUpHighscoreMediumMode.Scores mistakes</td>
                                <td>@PairUpHighscoreHardMode.Scores mistakes</td>
                            </tr>
                            <tr>
                                <td><strong>Fastest Solution Time:</strong></td>
                                <td>@PairUpHighscoreEasyMode.GetFormattedTimeSpent()</td>
                                <td>@PairUpHighscoreMediumMode.GetFormattedTimeSpent()</td>
                                <td>@PairUpHighscoreHardMode.GetFormattedTimeSpent()</td>
                            </tr>
                            <tr>
                                <td><strong>Average Score:</strong></td>
                                <td>@PairUpAllTimeAverageEasyMode.Scores mistakes</td>
                                <td>@PairUpAllTimeAverageMediumMode.Scores mistakes</td>
                                <td>@PairUpAllTimeAverageHardMode.Scores mistakes</td>
                            </tr>
                            <tr>
                                <td><strong>Average Solution Time:</strong></td>
                                <td>@PairUpAllTimeAverageEasyMode.GetFormattedTimeSpent()</td>
                                <td>@PairUpAllTimeAverageMediumMode.GetFormattedTimeSpent()</td>
                                <td>@PairUpAllTimeAverageHardMode.GetFormattedTimeSpent()</td>
                            </tr>
                        </tbody>
                    </table>
                    <h4 class="text-center">Last 10 games:</h4>
                    <table class="table table-striped last10GamesTable">
                        <thead>
                            <tr>
                                <th>Date</th>
                                <th>Mistakes</th>
                                <th>Solution Time</th>
                                <th>Difficulty</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var score in PairUpScores)
                            {
                                <tr>
                                    <td>@score.ShowOtherDateTimeFormat()</td>
                                    <td>@score.GameData.Fails Mistakes</td>
                                    <td>@score.GameData.GetFormattedTimeSpent()</td>
                                    <td>@score.GameData.Difficulty</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <h4 class="text-center">Average Scores for the Last 7 Days:</h4>
                    <ScoreChart ChartId="pairUpChart" Labels="@(PairUpAverageScoreLast7DaysEasyMode.Select(s => s.Date.ToString("dd/MM/yyyy")).ToArray())" Datasets="PairUpAverageScoreLast7DaysDataset" />

                    <h4 class="text-center">Average Solution Time In Games for the Last 7 Days:</h4>
                    <TimeScoreChart ChartId="pairUpChartTimes" Labels="@(PairUpAverageScoreLast7DaysEasyMode.Select(s => s.Date.ToString("dd/MM/yyyy")).ToArray())" Datasets="PairUpAverageTimeSpentLast7DaysDataset" />
                }
            </div>
        }
        else if (activeTab == "Sudoku" && username != null)
        {
            <div class="tab-pane fade show active">
                @if (SudokuScores == null)
                {
                    <h5 class="text-center">Loading...</h5>
                }
                else if (SudokuScores.Count == 0)
                {
                    <h5 class="text-center">No scores available.</h5>
                }
                else
                {
                    <table class="table table-striped statsTable">
                        <thead>
                            <tr>
                                <th>Statistics 4x4</th>
                                <th>Easy difficulty</th>
                                <th>Medium difficulty</th>
                                <th>Hard difficulty</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td><strong>Matches Played:</strong></td>
                                <td>@SudokuMatchesPlayedEasyMode4x4</td>
                                <td>@SudokuMatchesPlayedMediumMode4x4</td>
                                <td>@SudokuMatchesPlayedHardMode4x4</td>
                            </tr>
                            <tr>
                                <td><strong>Fastest Solution Time:</strong></td>
                                <td>@SudokuHighscoreEasyMode4x4.GetFormattedTimeSpent()</td>
                                <td>@SudokuHighscoreMediumMode4x4.GetFormattedTimeSpent()</td>
                                <td>@SudokuHighscoreHardMode4x4.GetFormattedTimeSpent()</td>
                            </tr>
                            <tr>
                                <td><strong>Average Solution Time:</strong></td>
                                <td>@SudokuAllTimeAverageEasyMode4x4.GetFormattedTimeSpent()</td>
                                <td>@SudokuAllTimeAverageMediumMode4x4.GetFormattedTimeSpent()</td>
                                <td>@SudokuAllTimeAverageHardMode4x4.GetFormattedTimeSpent()</td>
                            </tr>
                        </tbody>
                    </table>

                    <table class="table table-striped statsTable9x9">
                        <thead>
                            <tr>
                                <th>Statistics 9x9</th>
                                <th>Easy difficulty</th>
                                <th>Medium difficulty</th>
                                <th>Hard difficulty</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td><strong>Matches Played:</strong></td>
                                <td>@SudokuMatchesPlayedEasyMode9x9</td>
                                <td>@SudokuMatchesPlayedMediumMode9x9</td>
                                <td>@SudokuMatchesPlayedHardMode9x9</td>
                            </tr>
                            <tr>
                                <td><strong>Fastest Solution Time:</strong></td>
                                <td>@SudokuHighscoreEasyMode9x9.GetFormattedTimeSpent()</td>
                                <td>@SudokuHighscoreMediumMode9x9.GetFormattedTimeSpent()</td>
                                <td>@SudokuHighscoreHardMode9x9.GetFormattedTimeSpent()</td>
                            </tr>
                            <tr>
                                <td><strong>Average Solution Time:</strong></td>
                                <td>@SudokuAllTimeAverageEasyMode9x9.GetFormattedTimeSpent()</td>
                                <td>@SudokuAllTimeAverageMediumMode9x9.GetFormattedTimeSpent()</td>
                                <td>@SudokuAllTimeAverageHardMode9x9.GetFormattedTimeSpent()</td>
                            </tr>
                        </tbody>
                    </table>

                    <table class="table table-striped statsTable16x16">
                        <thead>
                            <tr>
                                <th>Statistics 16x16</th>
                                <th>Easy difficulty</th>
                                <th>Medium difficulty</th>
                                <th>Hard difficulty</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td><strong>Matches Played:</strong></td>
                                <td>@SudokuMatchesPlayedEasyMode16x16</td>
                                <td>@SudokuMatchesPlayedMediumMode16x16</td>
                                <td>@SudokuMatchesPlayedHardMode16x16</td>
                            </tr>
                            <tr>
                                <td><strong>Fastest Solution Time:</strong></td>
                                <td>@SudokuHighscoreEasyMode16x16.GetFormattedTimeSpent()</td>
                                <td>@SudokuHighscoreMediumMode16x16.GetFormattedTimeSpent()</td>
                                <td>@SudokuHighscoreHardMode16x16.GetFormattedTimeSpent()</td>
                            </tr>
                            <tr>
                                <td><strong>Average Solution Time:</strong></td>
                                <td>@SudokuAllTimeAverageEasyMode16x16.GetFormattedTimeSpent()</td>
                                <td>@SudokuAllTimeAverageMediumMode16x16.GetFormattedTimeSpent()</td>
                                <td>@SudokuAllTimeAverageHardMode16x16.GetFormattedTimeSpent()</td>
                            </tr>
                        </tbody>
                    </table>

                    <h4 class="text-center">Last 10 games:</h4>
                    <table class="table table-striped last10GamesTable">
                        <thead>
                            <tr>
                                <th>Date</th>
                                <th>Solution Time</th>
                                <th>Difficulty</th>
                                <th>Mode</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var score in SudokuScores)
                            {
                                <tr>
                                    <td>@score.ShowOtherDateTimeFormat()</td>
                                    <td>@score.GameData.GetFormattedTimeSpent()</td>
                                    <td>@score.GameData.Difficulty</td>
                                    <td>@score.GameData.Mode.GameModeToString()</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <h4 class="text-center">Average Solution Time for the Last 7 Days in 4x4 mode:</h4>
                    <TimeScoreChart ChartId="sudokuChart4x4" Labels="@(SudokuAverageScoreLast7DaysEasyMode4x4.Select(s => s.Date.ToString("dd/MM/yyyy")).ToArray())" Datasets="SudokuAverageTimeSpentIn4x4" />

                    <h4 class="text-center">Average Solution Time for the Last 7 Days in 9x9 mode:</h4>
                    <TimeScoreChart ChartId="sudokuChart9x9" Labels="@(SudokuAverageScoreLast7DaysEasyMode9x9.Select(s => s.Date.ToString("dd/MM/yyyy")).ToArray())" Datasets="SudokuAverageTimeSpentIn9x9" />

                    <h4 class="text-center">Average Solution Time for the Last 7 Days in 16x16 mode:</h4>
                    <TimeScoreChart ChartId="sudokuChart16x16" Labels="@(SudokuAverageScoreLast7DaysEasyMode16x16.Select(s => s.Date.ToString("dd/MM/yyyy")).ToArray())" Datasets="SudokuAverageTimeSpentIn16x16" />

                }
            </div>
        }
        else
        {
            <h5 class="text-center">Loading...</h5>
        }
    </div>
}
-->